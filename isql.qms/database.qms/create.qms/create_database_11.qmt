<?xml version="1.0" ?>
<!DOCTYPE extension
  PUBLIC '-//QM/2.2/Extension//EN'
  'http://www.codesourcery.com/qm/dtds/2.2/-//qm/2.2/extension//en.dtd'>
<extension class="fbqa.FirebirdTest" kind="test"><argument name="create_db_method"><enumeral>None</enumeral></argument><argument name="user_password"><text>masterkey</text></argument><argument name="sql_dialect"><enumeral>3</enumeral></argument><argument name="result_string"><text>CAST    RDB$FILE_SEQUENCE       RDB$FILE_START  RDB$FILE_LENGTH
------------------------------------------------------------    -----------------       --------------  ---------------
TEST.F00        1       201     400
TEST.F01        2       601     400
TEST.F02        3       1001    0
</text></argument><argument name="character_set"><enumeral>NONE</enumeral></argument><argument name="title"><text>CREATE DATABASE - Multi file DB - starting</text></argument><argument name="page_size"><enumeral>Default</enumeral></argument><argument name="substitutions"><set><tuple><text>^.*TEST.F0</text><text>TEST.F0</text></tuple><tuple><text>[ ]+</text><text>\t</text></tuple></set></argument><argument name="backup_file_path"><text/></argument><argument name="user_name"><text>SYSDBA</text></argument><argument name="resources"><set/></argument><argument name="expected_stderr"><text/></argument><argument name="target_version"><text>1.0</text></argument><argument name="description"><text>Database with four files. Additional files specified by STARTING AT.</text></argument><argument name="target_group"><text>.*</text></argument><argument name="populate_method"><enumeral>None (manual)</enumeral></argument><argument name="bug_id"><text/></argument><argument name="data_tuple"><text/></argument><argument name="db_name"><text>database_name</text></argument><argument name="isql_script"><text/></argument><argument name="source_code"><text>dsn = &quot;&quot;.join([context[&quot;server_location&quot;],
                        context[db_path_property],
                        &quot;TEST.FDB&quot;])

file1 = &quot;&quot;.join([context[db_path_property], &quot;TEST.F00&quot;])
file2 = &quot;&quot;.join([context[db_path_property], &quot;TEST.F01&quot;])
file3 = &quot;&quot;.join([context[db_path_property], &quot;TEST.F02&quot;])

createCommand = &quot;CREATE DATABASE '%s' USER '%s' PASSWORD '%s' FILE '%s' STARTING AT PAGE 201 FILE '%s' STARTING AT PAGE 601 FILE '%s' STARTING AT PAGE 1001&quot; % (dsn, user_name, user_password, file1, file2, file3)

db_conn= kdb.create_database(createCommand, int(sql_dialect))

cursor = db_conn.cursor()
cursor.execute(&quot;SELECT cast(RDB$FILE_NAME as varchar(60)),RDB$FILE_SEQUENCE,RDB$FILE_START,RDB$FILE_LENGTH FROM RDB$FILES&quot;)

printData(cursor)

db_conn.drop_database()</text></argument><argument name="test_id"><text>database.create.10</text></argument><argument name="target_platform"><text>All</text></argument><argument name="insert_statement"><text/></argument><argument name="test_expr"><text/></argument><argument name="statement_type_and_result"><enumeral>Python: String</enumeral></argument><argument name="prerequisites"><set/></argument><argument name="author"><text>pcisar:sskopalik</text></argument><argument name="drop_db"><enumeral>false</enumeral></argument><argument name="db_path_property"><text>database_location</text></argument></extension>